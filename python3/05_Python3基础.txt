1、for 语句：（可迭代循环）
    作用：用来遍历序列或可迭代对象的每个元素
    遍历：不重复的查看每一个元素
    可迭代对象是指能依次获取数据的对象（包括所有的容器类）:
        字符串   str
        列表     list
        元组     tuple
        字典     dict
        集合     set
        迭代器等⋯⋯

    for 语法：
        for 变量列表 in 可迭代对象
            语句块1
            ⋯⋯
        else：（当可迭代对象提供数据失败才执行else部分）
            语句块2
            ⋯⋯

    说明：
        1、变量依次用可迭代对象每次给出的元素依次赋值，然后执行语句块1
        2、可迭代对象不能提供数据元素后，执行else子句部分语句，然后退出循环
        3、else 子句部分可以胜利（同while语句一样）
        4、当在循环内用break终止循环时，else子句不会执行

    练习：1、任意输入一段字符串
       （1）计算出字符'a'的个数，并打印出来
       （2）计算出空格的个数，并打印出来
       （要求用for语句，不允许用S.count方法）
        思考：以上程序能否用while语句实现？
        答案：
            s = input("请输入字符串：")

            i = 0
            j = 0
            for x in s:
                if x == 'a':
                    i += 1
                if x == ' ':
                    j += 1
            else:
                print(i)
                print(j)


2、range() 函数
    格式见：>>>help(range)
    函数意义：
    range(stop)   从零开始生成一个整数后做加1操作，直至stop为止（不包含stop）
    range(start, stop[, step])   从start开始，每次生成一个整数后移动step，直到stop为止
                               （不包含stop，且step可以是负值）
    作用：用来生成一系列整数的可迭代对象（整数序列生成器）
    实例：
        range(4)          # 生成0， 1， 2， 3
        range(3, 6)       # 生成3， 4， 5
        range(1, 10, 2)   # 生成1， 3， 5， 7， 9
        range(5, 0)       # 不生成任何整数
        range(5, 0, -2)   # 生成5， 3， 1

    思考：s = input("请输入：")   # ABCD
        输出如下：
        第1个字符是：A
        第2个字符是：B
        第3个字符是：C
        第4个字符是：D

    练习：
        写一个程序
        输入一个开始整数值用变量begin绑定
        输入一个结束整数值用变量end绑定
        打印从begin 到 end（不包括end）的每一个整数，每8个打印在一行内
        如：
            请输入开始值：5
            请输入结束值：100
            5 6 7 8 9 10 11 12
            13 14 15 16⋯⋯
            用for循环 + range函数来做
    答案：
        s1 = int(input("请输入begin："))
        s2 = int(input("请输入end:"))
        count = 0
        for i in range(s1, s2 + 1):
            print(i, end = " ")
            count += 1
            if count % 8 == 0:
                print()
        else:
            print()


3、for 语句的嵌套：
    if XXX：for x in：
        for x in y：
            语句
        while True：
            for x in y:
                语句

    实例：已知有字符串“ABC”和字符串“123”，用以上两个字符串生成如下字符串
        “A1”，“A2”，“A3”，“B1”，“B2”，“B3”，“C1”⋯⋯
        for x in "ABC":
            for y in "123":
                print(x + y)

    练习：
        1、输入一个数，打印指定宽度的正方形
          如：输入5
              打印图形：
                 1 2 3 4 5
                 2 3 4 5 6
                 3 4 5 6 7
                 4 5 6 7 8
                 5 6 7 8 9
              要求用for语句和range()函数
          答案：
              n = int(input("请输入:"))

              for x in range(1, n + 1):
                  for y in range(x, n + x):
                      print(y, end = " ")
                  else:
                      print()
        2、计算：1+3+5+7+⋯⋯+97+99的和，分别用for循环、while循环来做
            答案：
                n = int(input("请输入:"))

                for x in range(1, n + 1):
                    for y in range(x, n + x):
                        print(y, end = " ")
                    else:
                        print()


4、continue 语句：
    作用：用于循环语句中（while，for）中，当continue执行后。不再执行本次
        循环内continue之后的语句，重新开始一次新的循环
    continue说明：在for语句中执行continue语句，将会从可迭代对象中取下一个元素，绑定变量后再次进行循环；
        在while语句中，执行continue将会直接跳转到while语句的真值表达式处重新循环条件
       （避免死循环，在continue之前要进行循环变量的改变）
    练习：用两种循环实现打印0-10之间的所有奇数
        for x in range(5):
            if x == 2:
                continue
            print(x)


5、循环总结：
    while 语句
    for 语句
        只能用于可迭代对象：
            字符串
    range() 函数的返回对象
    break 语句
    continue 语句

    练习：
        写程序，输入一个正整数，判断这个数是否是素数（prime）
    答案：
        n = int(input("请输入："))

        if n == 2:
            print("It's a prime")
        else:
            i = 2
            while i <= n // 2:
                if n % i == 0:
                    print("It's not a prime")
                    break
                i += 1
            else:
                print("It's a prime")


6、列表 List
    列表的定义：（与元素的类型无关）
    1、列表是由一系列特定元素组成的，元素与元素之间可能没有任何的关联关系，但他们之间有先后的顺序关系
    2、列表是一种容器
    3、列表是序列的一种
    4、列表是可以被改变的序列

    序列的类型：（有先后顺序关系）
        字符串    str
        列表      list
        元组      teple
        字节串     bytes
        字节数组   bytearray


7、创建列表的方法：
    创建空列表字面值：
        L = []   # 方括号表示列表

    创建非空列表
        L = [1, 2, 3, 4]
        L = ['beijing', 'shanghai', 'shenzhen']
        L = [1, 'two', 3.14, 'four']
        L = [1, 2, [3.1, 3.2], 4]

    列表的构造函数
        list()           # 生成一个空列表，等同于 []
        list(iterable)   # 用可迭代对象初始化一个列表
        L = list('hello')
        s = "tarena"
        L = list(s)
        L = list(range(1, 10, 2))
        len(L)           # 返回元素个数


8、列表的运算：
    算术运算：
        +   +=   *   *=
    + 加号用于拼接出新列表（生成一个新列表，原列表不变，列表只能加列表）
        x = [1, 2, 3]
        y = [4, 5, 6]
        z = x + y   # z = [1, 2, 3, 4, 5, 6]
    += 用于原列表与右侧可迭代对象拼接，并用变量重新绑定新列表
        x = [1, 2, 3]
        y = [4, 5, 6]
        x += y
    * 生成一个新的重复的列表
        x = [1, 2] * 3   # x = [1, 2, 1, 2, 1, 2]
    *= 生成重复列表后并用原变量绑定
        x = [1, 2, 3]
        x *= 4

    比较运算符：（同类型才能进行比较）
        <   <=   >   >=   ==   !=
        [1, 2, 3] < [1, 2, 4]   # True
        [1, 3, 2] < [1, 2, 4]   # False
        [1, 2, 3] != [3, 2, 1]  # True
        [1, 2, 3] > [1, 4]      # False
        # 以下规则与字符串不同，因为列表可以存任意类型的数据
        [1, "two"] > ["two", 2] # TypeError 类型错误


练习：
    输入三行文字，将这三行文字保存于一个列表L中，并打印再打印列表中字符串所有字符的个数
    如：
        请输入：abc<回车>
        请输入：1234<回车>
        请输入：您好<回车>
        生成如下列表：
            ['abc', '1234', '您好']
        总字符数是：9

    思考：输入任意行文本数据存入列表中，以输入空行结束，求行数，和所有的字符数，及显示文本内容

练习：
    1、用字符串*号 打印三角形，要求输入一个整数，此整数代表三角形的高度，打印三角形
       如：输入：3
           *
          ***
         *****
    答案：
        n = int(input("请输入数字："))

        for x in range(n):
            s = "*" * (2 * x + 1)
            print(s.center(n * 2))
    2、算出100 - 1000以内的水仙花数（Narcissistic Nnmber）
       水仙花数是指百位的3次方加十位的三次方加个位的三次方等于原数字。例如：153 = 1**3 + 5**3 + 3**3
        答案：153， 370
            for x in range(100, 1000):
                s = str(x)
                b = 0
                for i in s:
                    b += int(i) ** 3
                else:
                    if x == b:
                        print(x)

    3、求100以内的全部素数（primes）并打印循环嵌套
        答案：
        for x in range(2, 100):
            for i in range(2, x):
                if x % i == 0:
                    break
            else:
                print(x, "It's a prime")

